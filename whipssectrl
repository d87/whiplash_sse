#!/bin/sh

# parse command line parameters
ARGS=
while [ $# -ne 0 ] ; do
    PARAM=$1
    shift
    case $PARAM in
        --) break ;;
        --node) ERLANG_NODE_ARG=$1; shift ;;
        *) ARGS="$ARGS $PARAM" ;;
    esac
done


NODE=whiplash_sse
MODULE=whiplash_sse
HOST=localhost
ERLANG_NODE=$NODE@$HOST
ERL=/usr/bin/erl

if [ "$APPDIR" = "" ]; then
    # EJMSDIR="/usr/lib/erlang/lib/ejms-1.0"
    APPDIR="/home/django/whiplash_sse"
fi
SASL_LOG_PATH="$APPDIR"

# ERL_PROCESSES=250000
# SMP=auto
# POLL=true
# ERLANG_OPTS="+K $POLL -smp $SMP +P $ERL_PROCESSES"
ERLANG_OPTS=""

start ()
{
    exec $ERL \
      -name $ERLANG_NODE \
      -boot start_sasl \
      -pa ${APPDIR}/ebin ${APPDIR}/deps/*/ebin \
      -s $MODULE \
      -noshell -noinput -detached \
#      -sasl sasl_error_logger \\{file,\\\"$SASL_LOG_PATH\\\"\\}  "
}

# live ()
# {
#     sh -c "$ERL \
#       $NAME $ERLANG_NODE \
#       -pa $EJMSEBIN \
#       -mnesia dir \"\\\"$SPOOLDIR\\\"\" \
#       -s ejms \
#       $ERLANG_OPTS $ARGS \"$@\""
# # 
# # -sasl sasl_error_logger \\{file,\\\"$SASL_LOG_PATH\\\"\\} \
# }

stop ()
{
    exec $ERL \
      -sname stopper \
      -noinput -noshell \
      -eval "rpc:call('$ERLANG_NODE', init, stop, [])" \
      -s init stop
# -sasl sasl_error_logger \\{file,\\\"$SASL_LOG_PATH\\\"\\} \
}

case $ARGS in                                                                   
    ' start') start;;                                                           
    ' stop') stop;;
    ' debug') debug;;                                                           
    ' live') live;;                                                             
    ' started') wait_for_status 0 30 2;; # wait 30x2s before timeout            
    ' stopped') wait_for_status 3 15 2; stop_epmd;; # wait 15x2s before timeout 
    *) ctl $ARGS;;                                                              
esac
